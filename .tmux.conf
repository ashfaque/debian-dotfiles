
#   _                            #
#   | |_ _ __ ___  _   ___  __   #
#   | __| '_ ` _ \| | | \ \/ /   #
#   | |_| | | | | | |_| |>  <    #
#    \__|_| |_| |_|\__,_/_/\_\   #


# ? LocatIon: $HOME/.tmux.conf
# ? Reload Command::: tmux source-file ~/.tmux.conf
# ! Add these in ~/.bashrc if you want your Nerd Fonts being rendered in tmux
# ! export LC_ALL=en_IN.UTF-8
# ! export LANG=en_IN.UTF-8


# * ################################### * #
# * ### Default Commands & Keybinds ### * #
# * ################################### * #

# * NB: BY DEFAULT PREFIX_KEY IS ctrl + b, but if using this config it will be ctrl + a.


### ? CREATING NEW SESSION ? ###
# ~$ tmux
# or,
# ~$ tmux new -s SessionName


### ? DETACH FROM SESSION ? ###
# PREFIX_KEY   d


### ? SHOW ALL ACTIVE SESSIONS ? ###
# ~$ tmux ls


### ? RE-ATTACH TO A SESSION ? ###
# ~$ tmux attach -t SessionName/SessionNumber


### ? KILL A SESSION ? ###
# ~$ tmux kill-session -t SessionName/SessionNumber
# ~$ tmux kill-session    ----->   Will kill from latest to oldest created session. From top of the stack.

### ? KILL ALL SESSIONS ? ###
# ~$ tmux kill-server


### ? KILL ALL SESSIONS EXCEPT ONE ? ###
# ~$ tmux kill-session -at SessionName/SessionNumber


### ? VERTICAL SPLIT ? ###
# PREFIX_KEY   |
# def. PREFIX_KEY   %


### ? HORIZONTAL SPLIT ? ###
# PREFIX_KEY   -
# def. PREFIX_KEY   "


### ? NAVIGATE PANNELS ? ###
# PREFIX_KEY   (up, right, down, left) arrows


### ? CLOSE A PANNEL ? ###
# PREFIX_KEY   x


### ? CREATE WINDOWS / TABS IN A SESSION ? ###
# PREFIX_KEY   c


### ? MOVE(next / previous) TO DIFFERENT WINDOWS / TABS IN A SESSION ? ###
# PREFIX_KEY   n / p


### ? MOVE(by window number) TO DIFFERENT WINDOWS / TABS IN A SESSION ? ###
# PREFIX_KEY   (0 / 1 / 2 ...)


### ? COMMAND LINE INPUT FOR TMUX ? ###
# PREFIX_KEY   :


### ? SHOW ALL DEFAULT KEYBINDS ? ###
# PREFIX_KEY   ?


### ? OPEN PANEL TO NAVIGATE ACROSS WIDNOWS IN MULTIPLE SESSIONS ? ###
# PREFIX_KEY   w


### ? RENAME SESSION ? ###
# PREFIX_KEY   $


### ? MOVE CURRENT PANEL LEFT / RIGHT ? ###
# PREFIX_KEY   { / }


### ? TOGGLE PANEL ZOOM ? ###
# PREFIX_KEY   z


### ? CONVERT PANEL TO A WINDOW ? ###
# PREFIX_KEY   !


### ? RENAME CURRENT WINDOW ? ###
# PREFIX_KEY   ,


### ? CLOSE CURRENT WINDOW ? ###
# PREFIX_KEY   &


### ? KILL WITH COMMAND WINDOW ? ###
# ~$ tmux kill-windows -t<NUMBER_OF_WINDOW>


### ? LIST WINDOW ? ###
# ~$ tmux list-windows



# * ##################### * #
# * ### TMUX SETTINGS ### * #
# * ##################### * #

# If having problem with colors.
## set -g default-terminal "screen-256color"

# Set prefix to ctrl + a instead of ctrl + b.
set -g prefix C-a

# Removing old ctrl + b binding.
unbind C-b

# Send ctrl + a to applications by pressing it twice.
bind C-a send-prefix

# Enable mouse LMB to navigate to different panels and RMB for context menu.
set -g mouse
# For tmux <2.1
## set -g mouse-select-window on
## set -g mouse-select-pane on
## set -g mouse-resize-pane on

# Reload tmux config file changes by pressing `PREFIX_KEY r`.
bind r source-file ~/.tmux.conf
# Reload the configuration file using ‘ctrl + r’ only without PREFIX_KEY.
## bind-key -n C-r source-file ~/.tmux.conf

# Split windows using `PREFIX_KEY | -`
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Enable automatic panels rename.
## set-window-option -g automatic-rename

# Copy from tmux terminal and paste in system terminal.
## bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
## bind C-v run "tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer"    # Only needed if ctrl + shift + v didn't worked


###########################
### STATUS BAR SETTINGS ###
###########################

# Enable status and place it at the very bottom
set-option -g status on
set-option -g status-position bottom

# Start indexing from 1 instead of 0.
set -g base-index 1

# Status interval.
set-option -g status-interval 1

# All windows list to center of status
set-option -g status-justify centre

# Set status bar color fg to coffee, bg to brown.
set-option -g status-style fg=colour136,bg=colour235

# Set left length, style, kernel version.
set-option -g status-left-length 40
set-option -g status-left-style default
set-option -g status-left "#[fg=blue]Session: #S #[fg=black]• #[fg=green] #H #[fg=black]• #[fg=green,bright]#(uname -r)#[default]"

# Set right length, style, CPU load, uptime, date
set-option -g status-right-length 140
set-option -g status-right-style default
set-option -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) "    # ? https://github.com/thewtex/tmux-mem-cpu-load
## set-option -g status-right "#(curl icanhazip.com) "    # But there is a limited quota if you query this site from the same ip
## set-option -g status-right "#(ip route get 1.2.3.4 | cut -d " " -f 7) "    # Shows LAN IP. (NOT WORKING)
## set-option -g status-right "#(ifconfig | grep 'inet ' | awk 'NR==1 {print $2}') "    # Shows LAN IP. (NOT WORKING)
set-option -g status-right "#(hostname -I) "    # Shows LAN IP
# ? https://github.com/gpakosz/.tmux/issues/281#issuecomment-802552265

set-option -ag status-right "#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
set-option -ag status-right " #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d"

# Set inactive windows names fg colors to gray and bg to default
set-window-option -g window-status-style fg=colour244
set-window-option -g window-status-style bg=default

# Set active window name fg color to tomato color and bg to default
set-window-option -g window-status-current-style fg=colour166
## set-window-option -g window-status-current-style bg=default


# Guide Followed: https://arcolinux.com/everything-you-need-to-know-about-tmux-status-bar


# * ############################## * #
# * ### POWERLINE INTEGRATIONS ### * #
# * ############################## * #
# Install powerline from `software center` or `discover in KDE`.
# whereis powerline  or,  which powerline
## source "/usr/share/powerline/bindings/tmux/powerline.conf"

# If the powerline.conf file exists for tmux then use it.
POWERLINE_CONFIG_PATH="/usr/share/powerline/bindings/tmux/powerline.conf"
if-shell -b '[ -f "$POWERLINE_CONFIG_PATH" ]' {    # Raw shell script command under ''.
    set-option -g status-justify left    # Set windows allignment to left in status bar, only if using powerline.
    source "$POWERLINE_CONFIG_PATH"
}
# ? If condition in .tmux.conf file: https://stackoverflow.com/a/40902312



# * #################### * #
# * ### TMUX PLUGINS ### * #
# * #################### * #
# ? https://github.com/tmux-plugins/tpm
# ? https://arcolinux.com/everything-you-need-to-know-about-tmux-plugins-manager/
# STEPS :-
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm


####### List of plugins, add new plugins here #######
# ! Add plugins in `~/.tmux/plugins/` and then,
# ! Register plugins here, after that run this ---> `tmux source ~/.tmux.conf` and press `PREFIX_KEY + shift + i` to install plugin.
# ! For uninstalling the plugin, remove the plugin from this list and press ---> `PREFIX_KEY + alt + u`
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin "arcticicestudio/nord-tmux"    # tmux nord theme.

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

####### List of plugins ENDs #######



# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'



# ? REFERENCES:
# https://arcolinux.com/everthing-you-need-to-know-about-tmux-introduction/
# https://arcolinux.com/everthing-you-need-to-know-about-tmux-servers-and-sessions/
# https://arcolinux.com/everthing-you-need-to-know-about-tmux-windows/
# https://arcolinux.com/everthing-you-need-to-know-about-tmux-panes/
